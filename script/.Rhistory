geom_bin2d(binwidth=c(5,0.2)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.2)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
runoff <- read_table2("../data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
head(runoff, 3)
runoff[is.na(runoff$QUAL),2] <- NA # remove Quality measures that shifted in the Q column
runoff <- ts.format(runoff, format="%Y%m%d", cols=c(1,2)) # set date format
runoff$year <- as.integer(substr(runoff$Date, 1,4)) # derive year
runoff$doy <- as.numeric(strftime(runoff$Date, format = "%j"))  # derive day-of-year
runoff <- na.omit(runoff) # delete empty fields
head(runoff, 3)
ggplot(runoff, aes(x=Date, y=Q)) +
ylim(0, 400) +
ylab("Q [m³/s]") +
geom_line(aes(group=1), colour="blue", size=.5) +
facet_wrap(runoff$year, ncol=10, scales="free_x") +
scale_x_datetime(date_breaks = "1 month", minor_breaks=NULL) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 6))
runoff$Qlog <- log10(runoff$Q)  # calculate Log base 10 of runoff
runoff <- runoff[!(runoff$Qlog=='-Inf'),] # delete -Inf
head(runoff,3)
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.2)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
#ggplot(runoff, aes(Q))+
ggplot(subset(runoff, doy %in% c(1, 183)), aes(Q, group=doy, colour=factor(doy), fill=factor(doy)))+
geom_density(aes(Q, group=doy, colour=factor(doy), fill=factor(doy)),adjust=3, alpha=0.5) +
geom_rug()+
scale_x_log10(limits=c(1,1000))+
#scale_x_continuous(trans='log10')+
scale_fill_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
scale_colour_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
labs(title="Runoff density for selected days", x="Q [m³/s]", caption="n=59 years") +
theme_bw()
#Create empty data frame
runoff_aggregates <- data.frame()
#aggregate mean runoff per day
runoff_aggregates <- aggregate(runoff, by=list(runoff$doy), FUN=mean)[,c('doy','Qlog')]
#aggregate mean runoff per day
runoff_aggregates$sd <- aggregate(runoff, list(runoff$doy), FUN=sd)[,c('Qlog')]
names(runoff_aggregates) <- c('doy','mean','sd')
set.seed(2020)
# Manual input of desired time span
start_year <- 1500
end_year <- 2018
number_of_years <- end_year-start_year
runoff_pred <- data.frame()
# Simulation
for(i in runoff_aggregates$doy){
x <- rnorm(number_of_years, mean=runoff_aggregates$mean[i], sd=runoff_aggregates$sd[i])
pred <- data.frame(cbind(seq(start_year,end_year,1), # year
rep(i, number_of_years),      # doy
x))                           # predicted values
runoff_pred <- rbind(runoff_pred, pred)
}
names(runoff_pred) <- c('year','doy','Qlog')
# Filter gap years
runoff_pred <- runoff_pred[!(runoff_pred$doy==366 & leap_year(runoff_pred$year)==TRUE),]
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.2)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)+
theme_bw()
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)+
theme_bw()
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
runoff <- read_table2("../data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
head(runoff, 3)
runoff[is.na(runoff$QUAL),2] <- NA # remove Quality measures that shifted in the Q column
runoff <- ts.format(runoff, format="%Y%m%d", cols=c(1,2)) # set date format
runoff$year <- as.integer(substr(runoff$Date, 1,4)) # derive year
runoff$doy <- as.numeric(strftime(runoff$Date, format = "%j"))  # derive day-of-year
runoff <- na.omit(runoff) # delete empty fields
head(runoff, 3)
ggplot(runoff, aes(x=Date, y=Q)) +
ylim(0, 400) +
ylab("Q [m³/s]") +
geom_line(aes(group=1), colour="blue", size=.5) +
facet_wrap(runoff$year, ncol=10, scales="free_x") +
scale_x_datetime(date_breaks = "1 month", minor_breaks=NULL) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 6))
runoff$Qlog <- log10(runoff$Q)  # calculate Log base 10 of runoff
runoff <- runoff[!(runoff$Qlog=='-Inf'),] # delete -Inf
head(runoff,3)
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
#ggplot(runoff, aes(Q))+
ggplot(subset(runoff, doy %in% c(1, 183)), aes(Q, group=doy, colour=factor(doy), fill=factor(doy)))+
geom_density(aes(Q, group=doy, colour=factor(doy), fill=factor(doy)),adjust=3, alpha=0.5) +
geom_rug()+
scale_x_log10(limits=c(1,1000))+
#scale_x_continuous(trans='log10')+
scale_fill_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
scale_colour_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
labs(title="Runoff density for selected days", x="Q [m³/s]", caption="n=59 years") +
theme_bw()
#Create empty data frame
runoff_aggregates <- data.frame()
#aggregate mean runoff per day
runoff_aggregates <- aggregate(runoff, by=list(runoff$doy), FUN=mean)[,c('doy','Qlog')]
#aggregate mean runoff per day
runoff_aggregates$sd <- aggregate(runoff, list(runoff$doy), FUN=sd)[,c('Qlog')]
names(runoff_aggregates) <- c('doy','mean','sd')
set.seed(2020)
# Manual input of desired time span
start_year <- 1500
end_year <- 2018
number_of_years <- end_year-start_year
runoff_pred <- data.frame()
# Simulation
for(i in runoff_aggregates$doy){
x <- rnorm(number_of_years, mean=runoff_aggregates$mean[i], sd=runoff_aggregates$sd[i])
pred <- data.frame(cbind(seq(start_year,end_year,1), # year
rep(i, number_of_years),      # doy
x))                           # predicted values
runoff_pred <- rbind(runoff_pred, pred)
}
names(runoff_pred) <- c('year','doy','Qlog')
# Filter gap years
runoff_pred <- runoff_pred[!(runoff_pred$doy==366 & leap_year(runoff_pred$year)==TRUE),]
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)+
theme_bw()
catchment_area <- 1744 * 1000000 # area in [km²]
runoff_pred$q <- runoff_pred$Q/catchment_area
catchment_area <- 1744 * 1000000 # area in [km²]
runoff_pred$q <- runoff_pred$Q/catchment_area
runoff_pred$h <- runoff_pred$q * 0.0864 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
catchment_area <- 1744 # area in [km²]
runoff_pred$q <- runoff_pred$Q/catchment_area
runoff_pred$h <- runoff_pred$q * 0.0864 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
400/1744
runoff_pred$h <- runoff_pred$q * 0.0864 * 1000000 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
runoff_pred$h <- runoff_pred$q * 0.0864 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
400/1744
(400/1744)*86400
(400/1744)*86400/1000000
(400/1744)*86400/10^6
runoff_pred$h <- runoff_pred$q * 0.0864 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
head(runoff_pred, 6)
# Export in [l/(m²s)]
out <- runoff_pred[,c("year", "q")]
out$q <- format(out$q, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_lm2s.txt", sep="\t", row.names=F, col.names=F, quote=F)
# Export in [mm]
out <- runoff_pred[,c("year", "h")]
out$qacc <- format(out$qacc, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_mm.txt", sep="\t", row.names=F, col.names=F, quote=F)
runoff$q <- format(runoff$q, scientific = FALSE)
runoff$h <- format(runoff$h, scientific = FALSE)
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
runoff$q <- format(runoff$q, scientific = FALSE)
runoff$h <- format(runoff$h, scientific = FALSE)
head(runoff_pred, 6)
runoff_pred$h <- runoff_pred$q * 86400 / 10^6 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
runoff$q <- format(runoff$q, scientific = FALSE)
runoff$h <- format(runoff$h, scientific = FALSE)
head(runoff_pred, 6)
# Export q in [l/(m²s)]
out <- runoff_pred[,c("year", "q")]
out$q <- format(out$q, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_q.txt", sep="\t", row.names=F, col.names=F, quote=F)
# Export h in [mm]
out <- runoff_pred[,c("year", "h")]
out$h <- format(out$h, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_h.txt", sep="\t", row.names=F, col.names=F, quote=F)
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
# Export q in [l/(m²s)]
out <- runoff_pred[,c("year", "q")]
out$q <- format(out$q, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_q.txt", sep="\t", row.names=F, col.names=F, quote=F)
# Export h in [mm]
out <- runoff_pred[,c("year", "h")]
out$h <- format(out$h, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_h.txt", sep="\t", row.names=F, col.names=F, quote=F)
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
runoff <- read_table2("../data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
head(runoff, 3)
runoff[is.na(runoff$QUAL),2] <- NA # remove Quality measures that shifted in the Q column
runoff <- ts.format(runoff, format="%Y%m%d", cols=c(1,2)) # set date format
runoff$year <- as.integer(substr(runoff$Date, 1,4)) # derive year
runoff$doy <- as.numeric(strftime(runoff$Date, format = "%j"))  # derive day-of-year
runoff <- na.omit(runoff) # delete empty fields
head(runoff, 3)
ggplot(runoff, aes(x=Date, y=Q)) +
ylim(0, 400) +
ylab("Q [m³/s]") +
geom_line(aes(group=1), colour="blue", size=.5) +
facet_wrap(runoff$year, ncol=10, scales="free_x") +
scale_x_datetime(date_breaks = "1 month", minor_breaks=NULL) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 6))
runoff$Qlog <- log10(runoff$Q)  # calculate Log base 10 of runoff
runoff <- runoff[!(runoff$Qlog=='-Inf'),] # delete -Inf
head(runoff,3)
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
#ggplot(runoff, aes(Q))+
ggplot(subset(runoff, doy %in% c(1, 183)), aes(Q, group=doy, colour=factor(doy), fill=factor(doy)))+
geom_density(aes(Q, group=doy, colour=factor(doy), fill=factor(doy)),adjust=3, alpha=0.5) +
geom_rug()+
scale_x_log10(limits=c(1,1000))+
#scale_x_continuous(trans='log10')+
scale_fill_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
scale_colour_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
labs(title="Runoff density for selected days", x="Q [m³/s]", caption="n=59 years") +
theme_bw()
#Create empty data frame
runoff_aggregates <- data.frame()
#aggregate mean runoff per day
runoff_aggregates <- aggregate(runoff, by=list(runoff$doy), FUN=mean)[,c('doy','Qlog')]
#aggregate mean runoff per day
runoff_aggregates$sd <- aggregate(runoff, list(runoff$doy), FUN=sd)[,c('Qlog')]
names(runoff_aggregates) <- c('doy','mean','sd')
set.seed(2020)
# Manual input of desired time span
start_year <- 1500
end_year <- 2018
number_of_years <- end_year-start_year
runoff_pred <- data.frame()
# Simulation
for(i in runoff_aggregates$doy){
x <- rnorm(number_of_years, mean=runoff_aggregates$mean[i], sd=runoff_aggregates$sd[i])
pred <- data.frame(cbind(seq(start_year,end_year,1), # year
rep(i, number_of_years),      # doy
x))                           # predicted values
runoff_pred <- rbind(runoff_pred, pred)
}
names(runoff_pred) <- c('year','doy','Qlog')
# Filter gap years
runoff_pred <- runoff_pred[!(runoff_pred$doy==366 & leap_year(runoff_pred$year)==TRUE),]
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)+
theme_bw()
runoff_pred$Q <- 10^runoff_pred$Qlog
catchment_area <- 1744 # area in [km²]
runoff_pred$q <- runoff_pred$Q/catchment_area
runoff_pred$h <- runoff_pred$q * 86400 / 10^6 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
View(runoff)
runoff_pred$R <- runoff_pred$q * 86400 / 10^6 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
# Export q in [l/(m²s)]
out <- runoff_pred[,c("year", "q")]
out$q <- format(out$q, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_q.txt", sep="\t", row.names=F, col.names=F, quote=F)
# Export h in [mm]
out <- runoff_pred[,c("year", "R")]
out$R <- format(out$R, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_R.txt", sep="\t", row.names=F, col.names=F, quote=F)
mean(runoff_pred$h)*365
catchment_area <- 1744 # area in [km²]
runoff_pred$q <- runoff_pred$Q*1000/catchment_area # Q in [l/s]
runoff_pred$R <- runoff_pred$q * 86400 / 10^6 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
runoff <- read_table2("../data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
head(runoff, 3)
runoff[is.na(runoff$QUAL),2] <- NA # remove Quality measures that shifted in the Q column
runoff <- ts.format(runoff, format="%Y%m%d", cols=c(1,2)) # set date format
runoff$year <- as.integer(substr(runoff$Date, 1,4)) # derive year
runoff$doy <- as.numeric(strftime(runoff$Date, format = "%j"))  # derive day-of-year
runoff <- na.omit(runoff) # delete empty fields
head(runoff, 3)
ggplot(runoff, aes(x=Date, y=Q)) +
ylim(0, 400) +
ylab("Q [m³/s]") +
geom_line(aes(group=1), colour="blue", size=.5) +
facet_wrap(runoff$year, ncol=10, scales="free_x") +
scale_x_datetime(date_breaks = "1 month", minor_breaks=NULL) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 6))
runoff$Qlog <- log10(runoff$Q)  # calculate Log base 10 of runoff
runoff <- runoff[!(runoff$Qlog=='-Inf'),] # delete -Inf
head(runoff,3)
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
#ggplot(runoff, aes(Q))+
ggplot(subset(runoff, doy %in% c(1, 183)), aes(Q, group=doy, colour=factor(doy), fill=factor(doy)))+
geom_density(aes(Q, group=doy, colour=factor(doy), fill=factor(doy)),adjust=3, alpha=0.5) +
geom_rug()+
scale_x_log10(limits=c(1,1000))+
#scale_x_continuous(trans='log10')+
scale_fill_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
scale_colour_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
labs(title="Runoff density for selected days", x="Q [m³/s]", caption="n=59 years") +
theme_bw()
#Create empty data frame
runoff_aggregates <- data.frame()
#aggregate mean runoff per day
runoff_aggregates <- aggregate(runoff, by=list(runoff$doy), FUN=mean)[,c('doy','Qlog')]
#aggregate mean runoff per day
runoff_aggregates$sd <- aggregate(runoff, list(runoff$doy), FUN=sd)[,c('Qlog')]
names(runoff_aggregates) <- c('doy','mean','sd')
set.seed(2020)
# Manual input of desired time span
start_year <- 1500
end_year <- 2018
number_of_years <- end_year-start_year
runoff_pred <- data.frame()
# Simulation
for(i in runoff_aggregates$doy){
x <- rnorm(number_of_years, mean=runoff_aggregates$mean[i], sd=runoff_aggregates$sd[i])
pred <- data.frame(cbind(seq(start_year,end_year,1), # year
rep(i, number_of_years),      # doy
x))                           # predicted values
runoff_pred <- rbind(runoff_pred, pred)
}
names(runoff_pred) <- c('year','doy','Qlog')
# Filter gap years
runoff_pred <- runoff_pred[!(runoff_pred$doy==366 & leap_year(runoff_pred$year)==TRUE),]
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)+
theme_bw()
runoff_pred$Q <- 10^runoff_pred$Qlog
catchment_area <- 1744 # area in [km²]
runoff_pred$q <- runoff_pred$Q*1000/catchment_area # Q in [l/s]
runoff_pred$R <- runoff_pred$q * 86400 / 10^6 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
head(runoff_pred, 6)
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
# Export q in [l/(m²s)]
out <- runoff_pred[,c("year", "q")]
out$q <- format(out$q, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_q.txt", sep="\t", row.names=F, col.names=F, quote=F)
# Export h in [mm]
out <- runoff_pred[,c("year", "R")]
out$R <- format(out$R, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts_R.txt", sep="\t", row.names=F, col.names=F, quote=F)
mean(runoff_pred$R)
mean(runoff_pred$R)*365
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
runoff <- read_table2("../data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
head(runoff, 3)
runoff[is.na(runoff$QUAL),2] <- NA # remove Quality measures that shifted in the Q column
runoff <- ts.format(runoff, format="%Y%m%d", cols=c(1,2)) # set date format
runoff$year <- as.integer(substr(runoff$Date, 1,4)) # derive year
runoff$doy <- as.numeric(strftime(runoff$Date, format = "%j"))  # derive day-of-year
runoff <- na.omit(runoff) # delete empty fields
head(runoff, 3)
ggplot(runoff, aes(x=Date, y=Q)) +
ylim(0, 400) +
ylab("Q [m³/s]") +
geom_line(aes(group=1), colour="blue", size=.5) +
facet_wrap(runoff$year, ncol=10, scales="free_x") +
scale_x_datetime(date_breaks = "1 month", minor_breaks=NULL) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 6))
runoff$Qlog <- log10(runoff$Q)  # calculate Log base 10 of runoff
runoff <- runoff[!(runoff$Qlog=='-Inf'),] # delete -Inf
head(runoff,3)
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3) +
theme_bw()
#ggplot(runoff, aes(Q))+
ggplot(subset(runoff, doy %in% c(1, 183)), aes(Q, group=doy, colour=factor(doy), fill=factor(doy)))+
geom_density(aes(Q, group=doy, colour=factor(doy), fill=factor(doy)),adjust=3, alpha=0.5) +
geom_rug()+
scale_x_log10(limits=c(1,1000))+
#scale_x_continuous(trans='log10')+
scale_fill_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
scale_colour_discrete(name="Day of year",
breaks=c(1,183),
labels=c("Jan 1st", "Jul 1st")) +
labs(title="Runoff density for selected days", x="Q [m³/s]", caption="n=59 years") +
theme_bw()
#Create empty data frame
runoff_aggregates <- data.frame()
#aggregate mean runoff per day
runoff_aggregates <- aggregate(runoff, by=list(runoff$doy), FUN=mean)[,c('doy','Qlog')]
#aggregate mean runoff per day
runoff_aggregates$sd <- aggregate(runoff, list(runoff$doy), FUN=sd)[,c('Qlog')]
names(runoff_aggregates) <- c('doy','mean','sd')
set.seed(2020)
# Manual input of desired time span
start_year <- 1500
end_year <- 2018
number_of_years <- end_year-start_year
runoff_pred <- data.frame()
# Simulation
for(i in runoff_aggregates$doy){
x <- rnorm(number_of_years, mean=runoff_aggregates$mean[i], sd=runoff_aggregates$sd[i])
pred <- data.frame(cbind(seq(start_year,end_year,1), # year
rep(i, number_of_years),      # doy
x))                           # predicted values
runoff_pred <- rbind(runoff_pred, pred)
}
names(runoff_pred) <- c('year','doy','Qlog')
# Filter gap years
runoff_pred <- runoff_pred[!(runoff_pred$doy==366 & leap_year(runoff_pred$year)==TRUE),]
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)+
theme_bw()
runoff_pred$Q <- 10^runoff_pred$Qlog
catchment_area <- 1744 # area in [km²]
runoff_pred$q <- runoff_pred$Q*1000/catchment_area # Q [m³/s] to [l/s]
runoff_pred$R <- runoff_pred$q * 86400 / 10^6 # per day
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
