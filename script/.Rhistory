library(readr)
library(readr)
library(lubridate)
library(readr)
library(lubridate)
library(ggplot2)
setwd("..")
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
setwd("..")
runoff <- read_table2("U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("./data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
library(readr)
library(lubridate)
library(ggplot2)
library(hydrostats)
setwd("./")
runoff <- read_table2("./data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("./data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("./data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("./data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("./data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
runoff <- read_table2("../data/U1H005_daily.txt",
col_types = cols(DATE = col_integer()),
skip = 10)
head(runoff, 3)
runoff[is.na(runoff$QUAL),2] <- NA # remove Quality measures that shifted in the Q column
runoff <- ts.format(runoff, format="%Y%m%d", cols=c(1,2)) # set date format
runoff$year <- as.integer(substr(runoff$Date, 1,4)) # derive year
runoff$doy <- as.numeric(strftime(runoff$Date, format = "%j"))  # derive day-of-year
runoff <- na.omit(runoff) # delete empty fields
head(runoff, 3)
ggplot(runoff, aes(x=Date, y=Q)) +
ylim(0, 400) +
ylab("Q [m³/s]") +
geom_line(aes(group=1), colour="blue", size=.5) +
facet_wrap(runoff$year, ncol=10, scales="free_x") +
scale_x_datetime(date_breaks = "1 month", minor_breaks=NULL) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 6))
runoff$Qlog <- log10(runoff$Q)  # calculate Log base 10 of runoff
runoff <- runoff[!(runoff$Qlog=='-Inf'),] # delete -Inf
head(runoff,3)
# Density of logarithmic runoff (per doy)
ggplot(runoff, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Observed runoff Mkomazi (U1H005)") +
ylim(-2,3)
#Create empty data frame
runoff_aggregates <- data.frame()
#aggregate mean runoff per day
runoff_aggregates <- aggregate(runoff, by=list(runoff$doy), FUN=mean)[,c('doy','Qlog')]
#aggregate mean runoff per day
runoff_aggregates$sd <- aggregate(runoff, list(runoff$doy), FUN=sd)[,c('Qlog')]
names(runoff_aggregates) <- c('doy','mean','sd')
set.seed(2020)
number_of_years <- 500 # years to be simulated
runoff_pred <- data.frame()
for(i in runoff_aggregates$doy){
x <- rnorm(number_of_years, mean=runoff_aggregates$mean[i], sd=runoff_aggregates$sd[i])
pred <- data.frame(cbind(seq(1,500,1), # year
rep(i,500),   # doy
x))           # predicted values
runoff_pred <- rbind(runoff_pred, pred)
}
names(runoff_pred) <- c('year','doy','Qlog')
ggplot(runoff_pred, aes(x=doy,y=Qlog)) +
geom_bin2d(binwidth=c(10,0.1)) +
labs(x="Day of year", y="Log Q [m³/s]", title="Simulated runoff Mkomazi (U1H005)")+
ylim(-2,3)
runoff_pred$Q <- 10^runoff_pred$Qlog
catchment_area <- 1744 * 1000000 # area in [m²]
runoff_pred$q <- runoff_pred$Q/catchment_area
runoff_pred <- runoff_pred[order(runoff_pred$year, runoff_pred$doy),]
head(runoff_pred, 6)
out <- runoff_pred[,c("year", "q")]
out$q <- format(out$q, scientific = FALSE) # change to decimals
write.table(out, "../output/S_150_lts.txt", sep="\t", row.names=F, col.names=F, quote=F)
